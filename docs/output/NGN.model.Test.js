Ext.data.JsonP.NGN_model_Test({"subclasses":[],"meta":{},"linenr":3,"inheritdoc":null,"enum":null,"uses":[],"aliases":{},"requires":[],"component":false,"inheritable":null,"override":null,"extends":"NGNX.Person","mixedInto":[],"alternateClassNames":[],"members":{"css_mixin":[],"method":[{"meta":{},"owner":"NGN.model.Test","tagname":"method","name":"constructor","id":"method-constructor"},{"meta":{},"owner":"NGN.model.Test","tagname":"method","name":"sayHello","id":"method-sayHello"}],"cfg":[],"property":[],"css_var":[],"event":[]},"superclasses":["NGNX.Person"],"private":null,"singleton":false,"tagname":"class","statics":{"css_mixin":[],"cfg":[],"method":[],"property":[],"css_var":[],"event":[]},"parentMixins":[],"name":"NGN.model.Test","html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>NGNX.Person<div class='subclass '><strong>NGN.model.Test</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Test.html#NGN-model-Test' target='_blank'>Test.js</a></div></pre><div class='doc-contents'><p>This is an example of a custom API. Developers can build their own API's\nusing the NGN and NGNX libraries as a base.</p>\n\n<p>An example of using this code in a node process would be:</p>\n\n<pre><code>    require('ngn');\n\n    var person = new <a href=\"#!/api/EXAMPLE.Person\" rel=\"EXAMPLE.Person\" class=\"docClass\">EXAMPLE.Person</a>();\n</code></pre>\n\n<p><em>Outputs:</em></p>\n\n<pre><code>    I am person 2.0\n</code></pre>\n\n<p>Make sure you view the source (hover over <a href=\"#!/api/EXAMPLE.Person\" rel=\"EXAMPLE.Person\" class=\"docClass\">EXAMPLE.Person</a> at the top of the page) to see how this extension is created. You may be\nsurprised by how little code there is. Most of it is documentation.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='NGN.model.Test'>NGN.model.Test</span><br/><a href='source/Test.html#NGN-model-Test-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/NGN.model.Test-method-constructor' class='name expandable'>NGN.model.Test</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>This constructor is bare, except for a single console output when the object is created. ...</div><div class='long'><p>This constructor is bare, except for a single console output when the object is created.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-sayHello' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='NGN.model.Test'>NGN.model.Test</span><br/><a href='source/Test.html#NGN-model-Test-method-sayHello' target='_blank' class='view-source'>view source</a></div><a href='#!/api/NGN.model.Test-method-sayHello' class='name expandable'>sayHello</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Say hello. ...</div><div class='long'><p>Say hello.</p>\n</div></div></div></div></div></div></div>","mixins":[],"id":"class-NGN.model.Test","html_meta":{},"files":[{"href":"Test.html#NGN-model-Test","filename":"Test.js"}]});