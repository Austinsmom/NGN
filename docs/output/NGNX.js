Ext.data.JsonP.NGNX({"meta":{},"parentMixins":[],"inheritdoc":null,"enum":null,"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/NGN.html#NGNX' target='_blank'>NGN.js</a></div></pre><div class='doc-contents'><p>A library of common extensions.</p>\n\n<p>NGNX extends NGN with classes to support common application logic. They're intentionally\nseparated because each class represents is considered opinionated. By abstracting this\nlibrary from NGN, developers are given a choice about how they define the objects and API's\nin their application.</p>\n\n<p>NGNX strives to cover common ground, but will still likely require additional expansion\nto meet specific application needs. This library is supported in that the classes will function,\nbut it does not warrant that the library will be suitable for every use case. In other words,\ndevelopers can rely on the existence of these objects, but should remember that the classes in\nthis library are a <em>best effort</em> from NGN developers and contributors to reduce as much boilerplate\ncode as possible. The goal of NGN &amp; this extension library is to reduce developer's work, not do it\nfor them.</p>\n</div><div class='members'></div></div>","aliases":{},"html_meta":{},"subclasses":[],"inheritable":null,"uses":[],"extends":null,"tagname":"class","alternateClassNames":[],"members":{"css_mixin":[],"method":[],"cfg":[],"property":[],"css_var":[],"event":[]},"superclasses":[],"private":null,"requires":[],"singleton":true,"statics":{"css_mixin":[],"cfg":[],"method":[],"property":[],"css_var":[],"event":[]},"component":false,"name":"NGNX","override":null,"mixins":[],"id":"class-NGNX","linenr":462,"mixedInto":[],"files":[{"href":"NGN.html#NGNX","filename":"NGN.js"}]});